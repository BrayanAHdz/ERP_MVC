//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERP.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERPEntities : DbContext
    {
        public ERPEntities()
            : base("name=ERPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Evaluation> Evaluation { get; set; }
        public virtual DbSet<Module> Module { get; set; }
        public virtual DbSet<Operation> Operation { get; set; }
        public virtual DbSet<Report> Report { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Rol_Operation> Rol_Operation { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<vEmployee> vEmployee { get; set; }
        public virtual DbSet<vEvaluation> vEvaluation { get; set; }
        public virtual DbSet<vStaffTracking> vStaffTracking { get; set; }
    
        public virtual ObjectResult<EmployeeList_Result> EmployeeList(string search, Nullable<int> fisrt, Nullable<int> last)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fisrtParameter = fisrt.HasValue ?
                new ObjectParameter("fisrt", fisrt) :
                new ObjectParameter("fisrt", typeof(int));
    
            var lastParameter = last.HasValue ?
                new ObjectParameter("last", last) :
                new ObjectParameter("last", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeList_Result>("EmployeeList", searchParameter, fisrtParameter, lastParameter);
        }
    
        public virtual ObjectResult<EvaluationList_Result> EvaluationList(string search, Nullable<int> fisrt, Nullable<int> last)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fisrtParameter = fisrt.HasValue ?
                new ObjectParameter("fisrt", fisrt) :
                new ObjectParameter("fisrt", typeof(int));
    
            var lastParameter = last.HasValue ?
                new ObjectParameter("last", last) :
                new ObjectParameter("last", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EvaluationList_Result>("EvaluationList", searchParameter, fisrtParameter, lastParameter);
        }
    
        public virtual ObjectResult<UserList_Result> UserList(string search, Nullable<int> fisrt, Nullable<int> last)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fisrtParameter = fisrt.HasValue ?
                new ObjectParameter("fisrt", fisrt) :
                new ObjectParameter("fisrt", typeof(int));
    
            var lastParameter = last.HasValue ?
                new ObjectParameter("last", last) :
                new ObjectParameter("last", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserList_Result>("UserList", searchParameter, fisrtParameter, lastParameter);
        }
    
        public virtual ObjectResult<AllEvaluationList_Result> AllEvaluationList(string search, Nullable<int> fisrt, Nullable<int> last)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var fisrtParameter = fisrt.HasValue ?
                new ObjectParameter("fisrt", fisrt) :
                new ObjectParameter("fisrt", typeof(int));
    
            var lastParameter = last.HasValue ?
                new ObjectParameter("last", last) :
                new ObjectParameter("last", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllEvaluationList_Result>("AllEvaluationList", searchParameter, fisrtParameter, lastParameter);
        }
    }
}
